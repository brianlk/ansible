---
- name: Install and configure haproxy
  hosts: haproxy
  vars_files:
    - vars.yml
  gather_facts: true

  # pre_tasks:
  #   - include_tasks: pre-tasks.yml

  tasks:
    - name: Install haproxy package
      ansible.builtin.yum:
        name: haproxy
        state: present

    - name: Update haproxy.cfg
      ansible.builtin.template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: '0644'

    - name: Start haproxy service
      ansible.builtin.service:
        name: haproxy
        state: restarted
        enabled: true

    - name: Open firewall ports
      ansible.posix.firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        state: enabled
      loop: "{{ haproxy_fw_ports }}"


    - name: Download OCP installer
      ansible.builtin.get_url:
        url: "{{ ocp_download_url }}/{{ ocp_version }}/{{ item }}"
        dest: /tmp
        mode: '0644'
      loop: "{{ ocp_installers }}"

    - name: Decompress the OCP installer
      ansible.builtin.shell: |
          mkdir -p installer/ocp
          cd installer
          tar xzf /tmp/{{ item }}
      loop: "{{ ocp_installers }}"

    - name: Copy install-config.yaml template
      ansible.builtin.template:
        src: install-config.yaml.j2
        dest: installer/ocp/install-config.yaml
        mode: '0644'
      register: output

    - name: Generate Kubernetes manifests for the cluster
      ansible.builtin.shell: |
        cd installer
        ./openshift-install create manifests --dir ocp

    - name: Replace a localhost entry with our own
      ansible.builtin.lineinfile:
        path: installer/ocp/manifests/cluster-scheduler-02-config.yml
        regexp: '^(\s+mastersSchedulable:\s+)true'
        line: '\1false'
        mode: '0644'
        backrefs: true

    - name: Create the Ignition configuration files
      ansible.builtin.shell: |
        cd installer
        ./openshift-install create ignition-configs --dir ocp

    - name: Install httpd package
      ansible.builtin.yum:
        name: httpd
        state: present

    - name: Replace a localhost entry with our own
      ansible.builtin.lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: '^(Listen\s+)80'
        line: '\g<1>8080'
        mode: '0644'
        backrefs: true

    - name: Start httpd service
      ansible.builtin.service:
        name: httpd
        state: restarted
        enabled: true

    - name: Copy files to httpd folder
      ansible.builtin.copy:
        src: installer/ocp
        dest: /var/www/html
        owner: apache
        group: apache
        mode: '0755'
        remote_src: true

    - debug:
        msg: "
          coreos-installer install /dev/sda --insecure-ignition \
          --ignition-url=http://10.1.23.131:8080/ocp/bootstrap.ign \
          --copy-network
          "
